<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>cn.ecpark.tool</groupId>
        <artifactId>tool-ecpark-agent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>ecpark-agent-core</artifactId>

    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <build.skip.assembly>false</build.skip.assembly>
        <build.skip.test>true</build.skip.test>
       
        <agent.package.dest.dir>${project.basedir}/dist/ecpark-agent</agent.package.dest.dir>
<!--         <agent.package.dest.dir>E:/ecpark-agent</agent.package.dest.dir> -->
	
		<byte-buddy.version>1.10.3</byte-buddy.version>
        <powermock.version>1.6.4</powermock.version>
        <mockito-all.version>1.10.19</mockito-all.version>
        <jmh.version>1.19</jmh.version>
<!--         <sonar.exclusions> -->
<!-- 		      src/test/**/*, -->
<!-- 		      src/test/**/* -->
<!-- 		</sonar.exclusions> -->
    </properties>

    <dependencies>
    	<dependency>
            <groupId>cn.ecpark.tool</groupId>
            <artifactId>ecpark-agent-api</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
    	<dependency>
            <groupId>cn.ecpark.tool</groupId>
            <artifactId>ecpark-agent-util</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
		<dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>${byte-buddy.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito-all.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- 统计使用，如：百分位 -->
		<!--<dependency>
		    <groupId>com.clearspring.analytics</groupId>
		    <artifactId>stream</artifactId>
		    <version>2.9.8</version>
		</dependency>-->
    </dependencies>
    
    <profiles>
        <profile>
            <id>local</id>
            <activation><activeByDefault>true</activeByDefault></activation>
        </profile>
        <!-- 覆盖父POM定义的jenkins，父POM中将resources下的文件全排除了，该应用不应该排除services目录 -->
        <profile>
            <id>jenkins</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
<!--                         <excludes> -->
<!--                             <exclude>**/*</exclude> -->
<!--                         </excludes> -->
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>
    
    <build>
        <!-- 打包不带版本号，用于线上更新时不会因版本号改变，造成多个jar包 -->
        <finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- 这里plugin不管是否有注释都会执行 -->
			<plugin><artifactId>maven-surefire-plugin</artifactId></plugin>
            <plugin><artifactId>maven-dependency-plugin</artifactId></plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                	<excludes>
						<exclude>**/*.properties</exclude>
						<exclude>**/*.sh</exclude>
						<exclude>**/*.xml</exclude>
					</excludes>
                    <archive>
                        <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
<!-- 			<plugin> -->
<!--                 <artifactId>maven-assembly-plugin</artifactId> -->
<!--                 <configuration> -->
<!--                     <appendAssemblyId>false</appendAssemblyId> -->
<!--                     <descriptorRefs> -->
<!--                         <descriptorRef>jar-with-dependencies</descriptorRef> -->
<!--                     </descriptorRefs> -->
<!--                     <archive> -->
<!--                         <manifestEntries> -->
<!--                             <Premain-Class>cn.ecpark.tool.javaagent.YMAgent</Premain-Class> -->
<!--                         </manifestEntries> -->
<!--                     </archive> -->
<!--                 </configuration> -->
<!--                 <executions> -->
<!--                     <execution> -->
<!--                         <id>make-assembly</id> -->
<!--                         <phase>package</phase> -->
<!--                         <goals> -->
<!--                             <goal>assembly</goal> -->
<!--                         </goals> -->
<!--                     </execution> -->
<!--                 </executions> -->
<!--             </plugin> -->
			<!-- 将依赖jar包，打包到主jar包中 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <artifactSet>
                        <includes>
                            <include>net.bytebuddy:byte-buddy</include>
                            <include>okio:okio</include>
                            <include>com.lmax:disruptor</include>
                            <include>cn.ecpark.tool:ecpark-agent-util</include>
                            <include>cn.ecpark.tool:ecpark-agent-api</include>
                        </includes>
                    </artifactSet>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <relocations>
                        <relocation>
                            <pattern>net.bytebuddy</pattern>
                            <shadedPattern>cn.ecpark.tool.agent.thirdparty.net.bytebuddy</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>okio</pattern>
                            <shadedPattern>cn.ecpark.tool.agent.thirdparty.okio</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.lmax.disruptor</pattern>
                            <shadedPattern>cn.ecpark.tool.agent.thirdparty.com.lmax.disruptor</shadedPattern>
                        </relocation>
                    </relocations>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <delete dir="${agent.package.dest.dir}" />
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <mkdir dir="${agent.package.dest.dir}" />
                                <mkdir dir="${agent.package.dest.dir}/config" />
                                <mkdir dir="${agent.package.dest.dir}/lib" />
                                <mkdir dir="${agent.package.dest.dir}/plugins" />
                                <mkdir dir="${agent.package.dest.dir}/logs" />
                                <copy file="${project.build.directory}/ecpark-agent-core.jar" tofile="${agent.package.dest.dir}/lib/ecpark-agent.jar" overwrite="true" />
								<!-- 此处不能拷贝src下的文件，所以使用maven-resources-plugin拷贝config -->
<!-- 								<copy src="${project.basedir}/src/main/resources/agent.properties" dest="${project.basedir}/dist/ecpark-agent/config" forceoverwrite="true" /> -->
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<!-- 把配置文件拷到config路径下 -->
							<outputDirectory>${agent.package.dest.dir}/config</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/</directory>
									<!-- <excludes> -->
									<!-- <exclude>*.sh</exclude> -->
									<!-- </excludes> -->
									<includes>
										<include>*.properties</include>
										<include>*.xml</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<!-- 测试环境使用 -->
					<execution>
						<id>copy-resources-to-classes</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<outputDirectory>${project.basedir}/target/config</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/</directory>
									<includes>
										<include>*.properties</include>
										<include>*.xml</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
        	<plugin><artifactId>maven-assembly-plugin</artifactId></plugin>
        	<!-- 发布时带源码，需添加该配置 -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>